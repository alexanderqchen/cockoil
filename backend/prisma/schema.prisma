// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int           @id @default(autoincrement())
  name           String
  email          String
  referredById   Int?
  referredBy     User?         @relation("UserReferrals", fields: [referredById], references: [id])
  referredUsers  User[]        @relation("UserReferrals")
  payoutMethod   PayoutMethod?
  paypalInfo     PaypalInfo?
  venmoInfo      VenmoInfo?
  cashappInfo    CashappInfo?
  referredOrders Order[]
  rewards        Reward[]
  payouts        Payout[]
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  userId         Int?
}

model Order {
  id             Int         @id @default(autoincrement())
  shopifyOrderId String      @unique
  referredBy     User?       @relation(fields: [referredById], references: [id])
  referredById   Int?
  status         OrderStatus @default(PENDING)
  rewards        Reward[]
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt
}

model Reward {
  id            Int      @id @default(autoincrement())
  amount        Int
  createdFrom   Order    @relation(fields: [createdFromId], references: [id])
  createdFromId Int
  givenTo       User     @relation(fields: [givenToId], references: [id])
  givenToId     Int
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Payout {
  id        Int          @id @default(autoincrement())
  amount    Int
  givenTo   User         @relation(fields: [givenToId], references: [id])
  givenToId Int
  status    PayoutStatus @default(UNPAID)
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
}

model PaypalInfo {
  user     User   @relation(fields: [userId], references: [id])
  userId   Int    @unique
  username String
}

model VenmoInfo {
  user     User   @relation(fields: [userId], references: [id])
  userId   Int    @unique
  username String
}

model CashappInfo {
  user     User   @relation(fields: [userId], references: [id])
  userId   Int    @unique
  username String
}

enum OrderStatus {
  PENDING
  COMPLETED
}

enum PayoutStatus {
  UNPAID
  PAID
}

enum PayoutMethod {
  PAYPAL
  VENMO
  CASHAPP
}
